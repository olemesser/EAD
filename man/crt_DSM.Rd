% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crt_DSM.R
\name{crt_DSM}
\alias{crt_DSM}
\title{Create a domain dependency matrix (DSM)}
\usage{
crt_DSM(
  N_el,
  method = c("DNS", "modular", "bus", "bus-modular"),
  PARAM = list(DNS = 0.1, modular = NULL, power = NULL, bus_weight = 0.5),
  upper_Bound = 5,
  forced = NULL
)
}
\arguments{
\item{N_el}{Number of rows and columns for the DSM.}

\item{method}{A character specifying the method used for DSM generation. The following methods are available:
\describe{
  \item{DNS}{Generates a DSM by sampling random matrices to achieve a given density. Only  \code{PARAM$DNS} is needed}
  \item{modular}{Generates a DSM using two conditions. The procedure tries to achieve a certain density specified by \code{PARAM$DNS} and, second,
  tries to create a certain distribution for the off-diagonal elements which is specified via \code{PARAM$modular}. Low values of \code{PARAM$modular} indicate a random distribution while high values indicate that values are more clustered around the DSM main diagonal.
  The latter represents a strictly modular design with block matrices.}
  \item{bus}{}
  \item{bus-modular}{Runs \code{method = 'modular'} and \code{method = 'bus'} separately and than samples a final DSM via an element wise sampling of the DSMs generated by those two methods.
  Requires to define \code{PARAM$bus_weight}.}
}}

\item{PARAM}{A named list object with the following entries:
\describe{
  \item{DNS}{Density for the matrix. Must be between \code{0 <= DNS <= 1}. Mandatory for all sampling methods.}
  \item{modular}{A value which specifies the importance of modularity when choosing \code{method = 'modular'}.}
  \item{power}{The power law distribution coefficient. Passed to \link[igraph]{sample_pa}. Only relevant when choosing \code{method = 'bus'}.}
  \item{bus_weight}{A numeric with \code{0<= bus_weight <= 1}. Defines the sampling probability of the bus design.
  If \code{bus_weight = 1} the resulting matrix is identical to the bus matrix. If \code{bus_weight = 0} the resulting matrix is identical to the modular matrix.}
}}

\item{upper_Bound}{Integer, default \code{upper_Bound=20}, specifies the maximum number in the DMM if \code{binary=FALSE}}

\item{forced}{A numeric vector containing indices of elements which cannot be zero since otherwise a invalid design is created later on.}

\item{DENS}{A numeric value specifying the density within the DSM. This is an alternative method to generate the DSM.}
}
\value{
A list object containing the product mix. This list consists of:
\describe{
  \item{DSM}{The created DSM}
  \item{measures}{A list of measures for the given DSM. The measures are: \link[EAD]{measure_DENS}, \link[EAD]{measure_structuralcomplexity},
  \link[EAD]{measure_modularity}, \link[EAD]{measure_neumannEntropy}, \link[EAD]{measure_MCC}, \link[EAD]{measure_HVM}, \link[EAD]{measure_HIC}}
}
}
\description{
Creates a \code{N_el} x \code{N_el}  domain dependency matrix (DSM) based on different methods.
}
\examples{
set.seed(1234)
## creating a random DSM ##
crt_DSM(N_el = 7,
        PARAM = list(DNS=0.1),
        method = 'DNS',
        upper_Bound = 1)

## creating a strictly modular DSM ##
crt_DSM(N_el = 7,
        PARAM = list(DNS=0.2,
                     modular = 1),
        method = 'modular',
        upper_Bound = 1)

## creating a bus DSM ##
crt_DSM(N_el = 7,
        PARAM = list(DNS = 0.2,
                     power = 1),
        method = 'bus',
        upper_Bound = 1)
}
